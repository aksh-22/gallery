import React, {useEffect, useState} from 'react';
import {Button, PermissionsAndroid, Text, View} from 'react-native';
// const RNFS = require('react-native-fs');
// import {PKImagePicker} from 'react-native-pk-image-picker';
import * as ScopedStorage from 'react-native-scoped-storage';

type Props = {};

const Home = ({}: Props) => {
  const [isOpen, setIsOpen] = useState(false);

  // const getData = () => {
  //   RNFS.readDir(RNFS.DownloadDirectoryPath) // On Android, use "RNFS.DocumentDirectoryPath" (MainBundlePath is not defined)
  //     .then(result => {
  //       console.log('GOT RESULT', result);

  //       console.log('result[0]', result[0].isFile());

  //       // stat the first file
  //       return Promise.all([RNFS.stat(result[0].path), result[0].path]);
  //     })
  //     .then(statResult => {
  //       if (statResult[0].isFile()) {
  //         // if we have a file, read it
  //         return RNFS.readFile(statResult[1], 'utf8');
  //       }

  //       return 'no file';
  //     })
  //     .then(contents => {
  //       // log the file contents
  //       console.log(contents);
  //     })
  //     .catch(err => {
  //       console.log(err.message, err.code);
  //     });
  // };

  // async function hasAndroidPermission() {
  //   const permission = PermissionsAndroid.PERMISSIONS.WRITE_EXTERNAL_STORAGE;

  //   const hasPermission = await PermissionsAndroid.check(permission);
  //   if (hasPermission) {
  //     return true;
  //   }

  //   const status = await PermissionsAndroid.request(permission);
  //   return status === 'granted';
  // }

  useEffect(() => {
    // getData();
    // hasAndroidPermission();
    // getData();
  }, []);

  return (
    <View style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>
      <Button title="press" onPress={() => setIsOpen(true)} />
      {/* <PKImagePicker
        isVisible={isOpen}
        multiple={true}
        onClose={() => setIsOpen(false)}
        maximum={10}
      /> */}
    </View>
  );
};

export default Home;
